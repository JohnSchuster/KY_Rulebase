## The variable control is available in scope, and is set to the TextInputInterviewControl that this template is to render
#if( $control.isVisible() )
    #parse( "investigation/controlMessages.vm" )

    #if( $control.isReadOnly() )
        #set( $readOnlyString = "readonly" )
    #else
        #set( $readOnlyString = "" )
    #end
    #parse( "investigation/input-style-overrides.vm" )
    <div class="question">#parse("investigation/identifier-text.vm")<label for="${control.getEncodedID()}">#parse("investigation/control-text.vm")</label></div>
    <div class="info">
        #if($control.isMandatory() == "true" || $control.isMandatory() == "True")
            <span class="mandatory">${mandatory-text}</span>
        #end
        &nbsp;
    </div>
    <div class="control">
        #if( $control.getSelectionStyle().equals("Dropdown") )
            #parse( "investigation/Dropdown-selection.vm" )
        #elseif( $control.getSelectionStyle().equals("Listbox") )
            #parse( "investigation/Listbox-selection.vm" )
        #elseif( $control.getSelectionStyle().equals("Radiobutton") )
			## xRulz Start
				##set( $xRbset = $control.getProperty("xRulzUseButtonSet","") )
			#if( "true" == $control.getProperty("xRulzUseButtonSet","") )
				## Custom with jQuery Buttonset
				#parse( "investigation/xRulz-Radiobutton-selection.vm" )
			#else
				## OWD Vanilla Radio Buttons
				#parse( "investigation/Radiobutton-selection.vm" )
			#end
			## xRulz End
        #else
            #if($control.getLineCount() < 2)
                <input type="text" id="${control.getEncodedID()}" name="${control.getId()}" ${readOnlyString} value="${control.getDisplayValue()}" alt="${control.getText()}" tabindex="#tabIndex()" size="${text-control-width}" ${styleAttribute} ${classAttribute}>
            #else
                <textarea rows="${control.getLineCount()}" cols="${text-area-cols}" id="${control.getEncodedID()}" name="${control.getId()}" ${readOnlyString} tabindex="#tabIndex()" ${styleAttribute} ${classAttribute}>${control.getDisplayValue()}</textarea>
            #end
        #end
    </div>
#end